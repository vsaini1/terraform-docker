$ terraform show
terraform show
# docker_container.nginx:
resource "docker_container" "nginx" {
    attach            = false
    command           = [
        "nginx",
        "-g",
        "daemon off;",
    ]
    cpu_shares        = 0
    dns               = []
    dns_opts          = []
    entrypoint        = [
        "/docker-entrypoint.sh",
    ]
    gateway           = "172.17.0.1"
    hostname          = "742b4bd9ca79"
    id                = "742b4bd9ca793c559d579058e0e09d1b7b7cafb493a124a0e27a7db527ca080f"
    image             = "sha256:daee903b4e436178418e41d8dc223b73632144847e5fe81d061296e667f16ef2"
    ip_address        = "172.17.0.3"
    ip_prefix_length  = 16
    ipc_mode          = "private"
    log_driver        = "json-file"
    log_opts          = {
        "max-size" = "100m"
    }
    logs              = false
    max_retry_count   = 0
    memory            = 0
    memory_swap       = 0
    must_run          = true
    name              = "test1"
    network_data      = [
        {
            gateway          = "172.17.0.1"
            ip_address       = "172.17.0.3"
            ip_prefix_length = 16
            network_name     = "bridge"
        },
    ]
    network_mode      = "default"
    privileged        = false
    publish_all_ports = false
    read_only         = false
    restart           = "no"
    rm                = false
    shm_size          = 64
    start             = true

    ports {
        external = 8000
        internal = 80
        ip       = "0.0.0.0"
        protocol = "tcp"
    }
}

# docker_image.nginx:
resource "docker_image" "nginx" {
    id           = "sha256:daee903b4e436178418e41d8dc223b73632144847e5fe81d061296e667f16ef2nginx:latest"
    keep_locally = false
    latest       = "sha256:daee903b4e436178418e41d8dc223b73632144847e5fe81d061296e667f16ef2"
    name         = "nginx:latest"
}
